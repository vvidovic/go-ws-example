kind: Template
apiVersion: v1
metadata:
  name: go-ws-example
  annotations:
    description: 'An example web service written in Golang (https://github.com/vvidovic/go-ws-example)'
    tags: 'quickstart,golang'
    iconClass: icon-go-gopher
labels:
  template: go-ws-example
  app: go-ws-example
objects:
  - kind: Service
    apiVersion: v1
    metadata:
      name: go-ws-example
      annotations:
        description: Exposes and load balances the application pods
    spec:
      ports:
        - name: web
          port: 8080
          targetPort: 8080
      selector:
        name: go-ws-example
  - kind: Route
    apiVersion: v1
    metadata:
      name: go-ws-example
    spec:
      host: '${APPLICATION_DOMAIN}'
      to:
        kind: Service
        name: go-ws-example
  - kind: ImageStream
    apiVersion: v1
    metadata:
      name: go-ws-example
      annotations:
        description: Keeps track of changes in the application image
  - kind: BuildConfig
    apiVersion: v1
    metadata:
      name: go-ws-example
      annotations:
        description: Defines how to build the application
    spec:
      source:
        type: Git
        git:
          uri: '${SOURCE_REPOSITORY_URL}'
          ref: '${SOURCE_REPOSITORY_REF}'
        contextDir: '${CONTEXT_DIR}'
      strategy:
        type: Docker
      output:
        to:
          kind: ImageStreamTag
          name: 'go-ws-example:latest'
      triggers:
        - type: ConfigChange
        - type: GitHub
          github:
            secret: '${GITHUB_WEBHOOK_SECRET}'
      resources:
        limits:
          cpu: 250m
          memory: 300Mi
        requests:
          cpu: 50m
          memory: 50Mi
      postCommit:
        script: go test -v ./...
  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      name: go-ws-example
      annotations:
        description: Defines how to deploy the application server
    spec:
      strategy:
        type: Recreate
      triggers:
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - go-ws-example
            from:
              kind: ImageStreamTag
              name: 'go-ws-example:latest'
        - type: ConfigChange
      replicas: 1
      selector:
        name: go-ws-example
      template:
        metadata:
          name: go-ws-example
          labels:
            name: go-ws-example
        spec:
          containers:
            - name: go-ws-example
              image: go-ws-example
              ports:
                - containerPort: 8080
parameters:
  - name: SOURCE_REPOSITORY_URL
    description: The URL of the repository with your application source code
    value: 'https://github.com/vvidovic/go-ws-example.git'
  - name: SOURCE_REPOSITORY_REF
    description: >-
      Set this to a branch name, tag or other ref of your repository if you are
      not using the default branch
  - name: CONTEXT_DIR
    description: >-
      Set this to the relative path to your project if it is not in the root of
      your repository
  - name: APPLICATION_DOMAIN
    description: The exposed hostname that will route to the go-ws-example service
    value: go-ws-example.192.168.99.101.nip.io
  - name: GITHUB_WEBHOOK_SECRET
    description: >-
      Github trigger secret.  A difficult to guess string encoded as part of the
      webhook URL.  Not encrypted.
    generate: expression
    from: '[a-zA-Z0-9]{40}'

